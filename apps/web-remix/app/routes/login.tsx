import { Form, Link } from "react-router";
import React, { useState, useEffect } from "react";
import type { Route } from "./+types/login";
import { useUser } from "../hooks/useUser";

export function meta({}: Route.MetaArgs) {
  return [
    { title: "–í—Ö–æ–¥ ‚Äî Retasker" },
    { name: "description", content: "–í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É —á–µ—Ä–µ–∑ Telegram" },
  ];
}

export default function LoginPage() {
  const { user, login, loading } = useUser();
  const [telegramId, setTelegramId] = useState("");
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState("");

  // useEffect –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–Ω–µ —É—Å–ª–æ–≤–Ω—ã—Ö –±–ª–æ–∫–æ–≤
  useEffect(() => {
    if (user) {
      const timer = setTimeout(() => {
        window.location.href = "/";
      }, 2000);
      
      return () => clearTimeout(timer);
    }
  }, [user]);

  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
  if (user) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-50">
        <div className="text-center">
          <div className="w-12 h-12 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4">
            <svg className="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
            </svg>
          </div>
          <h2 className="text-xl font-semibold text-gray-900 mb-2">–í—ã —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã</h2>
          <p className="text-gray-600 mb-4">–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...</p>
        </div>
      </div>
    );
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø–æ–∫–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-50">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-gray-600">–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...</p>
        </div>
      </div>
    );
  }

  const handleLogin = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!telegramId.trim()) {
      setError("–í–≤–µ–¥–∏—Ç–µ Telegram ID");
      return;
    }

    setIsLoading(true);
    setError("");

    const result = await login(telegramId.trim());
    if (result.success) {
      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
      window.location.href = "/";
    } else {
      setError(result.error || "–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏");
    }
    setIsLoading(false);
  };

  const openTelegramBot = () => {
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –±–æ—Ç–∞ –≤ Telegram
    window.open("https://t.me/RetaskerRobot", "_blank");
  };

  const handleTelegramOAuth = () => {
    // Telegram OAuth 2.0 - –∫–∞–∫ —É Fragment
    const botId = "8429934306:AAFAUR6XQoN5vchfpES29-8YVYdiJbPNYRk"; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ –∏–∑ —Ç–æ–∫–µ–Ω–∞
    
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—É–±–ª–∏—á–Ω—ã–π –¥–æ–º–µ–Ω –¥–ª—è OAuth
        const baseUrl = 'https://3dfu5ii9t8is.share.zrok.io';
    
    const origin = encodeURIComponent(baseUrl);
    const redirectUri = encodeURIComponent(`${baseUrl}/auth/callback`);
    
    const oauthUrl = `https://oauth.telegram.org/auth?bot_id=${botId}&origin=${origin}&return_to=${redirectUri}`;
    
    window.location.href = oauthUrl;
  };

  return (
    <div className="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
      <div className="max-w-md w-full space-y-8">
        <div>
          <h2 className="mt-6 text-center text-3xl font-extrabold text-gray-900">
            –í—Ö–æ–¥ –≤ Retasker
          </h2>
          <p className="mt-2 text-center text-sm text-gray-600">
            –í–æ–π–¥–∏—Ç–µ —á–µ—Ä–µ–∑ Telegram –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ
          </p>
        </div>
        
        <div className="bg-white shadow rounded-lg p-6">
          <div className="text-center">
            <div className="text-6xl mb-4">ü§ñ</div>
            <h3 className="text-lg font-semibold text-gray-900 mb-4">
              –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Telegram
            </h3>
            <p className="text-gray-600 mb-6">
              –î–ª—è –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞—à–µ–≥–æ Telegram –±–æ—Ç–∞
            </p>
            
            <div className="space-y-3">
              <button
                onClick={handleTelegramOAuth}
                className="w-full inline-flex justify-center items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
              >
                <svg className="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M11.944 0A12 12 0 0 0 0 12a12 12 0 0 0 12 12 12 12 0 0 0 12-12A12 12 0 0 0 12 0a12 12 0 0 0-.056 0zm4.962 7.224c.1-.002.321.023.465.14a.506.506 0 0 1 .171.325c.016.093.036.306.02.472-.18 1.898-.962 6.502-1.36 8.627-.168.9-.499 1.201-.82 1.23-.696.065-1.225-.46-1.9-.902-1.056-.693-1.653-1.124-2.678-1.8-1.185-.78-.417-1.21.258-1.91.177-.184 3.247-2.977 3.307-3.23.007-.032.014-.15-.056-.212s-.174-.041-.249-.024c-.106.024-1.793 1.14-5.061 3.345-.48.33-.913.49-1.302.48-.428-.008-1.252-.241-1.865-.44-.752-.245-1.349-.374-1.297-.789.027-.216.325-.437.893-.663 3.498-1.524 5.83-2.529 6.998-3.014 3.332-1.386 4.025-1.627 4.476-1.635z"/>
                </svg>
                –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Telegram OAuth
              </button>
              
              <button
                onClick={openTelegramBot}
                className="w-full inline-flex justify-center items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md shadow-sm text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
              >
                <svg className="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M11.944 0A12 12 0 0 0 0 12a12 12 0 0 0 12 12 12 12 0 0 0 12-12A12 12 0 0 0 12 0a12 12 0 0 0-.056 0zm4.962 7.224c.1-.002.321.023.465.14a.506.506 0 0 1 .171.325c.016.093.036.306.02.472-.18 1.898-.962 6.502-1.36 8.627-.168.9-.499 1.201-.82 1.23-.696.065-1.225-.46-1.9-.902-1.056-.693-1.653-1.124-2.678-1.8-1.185-.78-.417-1.21.258-1.91.177-.184 3.247-2.977 3.307-3.23.007-.032.014-.15-.056-.212s-.174-.041-.249-.024c-.106.024-1.793 1.14-5.061 3.345-.48.33-.913.49-1.302.48-.428-.008-1.252-.241-1.865-.44-.752-.245-1.349-.374-1.297-.789.027-.216.325-.437.893-.663 3.498-1.524 5.83-2.529 6.998-3.014 3.332-1.386 4.025-1.627 4.476-1.635z"/>
                </svg>
                –û—Ç–∫—Ä—ã—Ç—å –±–æ—Ç–∞ –≤ Telegram
              </button>
            </div>
            
            <div className="border-t pt-6">
              <div className="text-center mb-4">
                <p className="text-sm text-gray-500 mb-4">
                  –ï—Å–ª–∏ –≤—ã —É–∂–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å —Ä–∞–Ω–µ–µ, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:
                </p>
                
                <button
                  onClick={async () => {
                    setIsLoading(true);
                    setError("");
                    
                    // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    const savedUser = localStorage.getItem("retasker_user");
                    if (savedUser) {
                      try {
                        const userData = JSON.parse(savedUser);
                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—Å–µ –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ
                        const response = await fetch("/api/auth/telegram_web", {
                          method: "POST",
                          headers: {
                            "Content-Type": "application/json",
                          },
                          body: JSON.stringify({ telegramId: userData.telegramId }),
                        });
                        
                        if (response.ok) {
                          const data = await response.json();
                          if (data.success) {
                            // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                            localStorage.setItem("retasker_user", JSON.stringify(data.user));
                            window.location.href = "/";
                            return;
                          }
                        }
                        
                        // –ï—Å–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å, —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ
                        localStorage.removeItem("retasker_user");
                        setError("–°–µ—Å—Å–∏—è —É—Å—Ç–∞—Ä–µ–ª–∞. –í–æ–π–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ —á–µ—Ä–µ–∑ –±–æ—Ç–∞.");
                      } catch (error) {
                        console.error("Session restore error:", error);
                        setError("–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏");
                      }
                    } else {
                      setError("–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ –≤ –±–æ—Ç–∞.");
                    }
                    
                    setIsLoading(false);
                  }}
                  className="w-full inline-flex justify-center items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                >
                  <svg className="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 10V3L4 14h7v7l9-11h-7z" />
                  </svg>
                  {isLoading ? "–ü—Ä–æ–≤–µ—Ä–∫–∞..." : "–ë—ã—Å—Ç—Ä—ã–π –≤—Ö–æ–¥"}
                </button>
              </div>

              <div className="text-center">
                <p className="text-sm text-gray-500 mb-4">
                  –ò–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à Telegram ID –≤—Ä—É—á–Ω—É—é:
                </p>
                
                <form onSubmit={handleLogin} className="space-y-4">
                  <input
                    type="text"
                    value={telegramId}
                    onChange={(e) => setTelegramId(e.target.value)}
                    placeholder="–í–∞—à Telegram ID"
                    className="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500"
                  />
                  
                  {error && (
                    <p className="text-sm text-red-600">{error}</p>
                  )}
                  
                  <button
                    type="submit"
                    disabled={isLoading}
                    className="w-full inline-flex justify-center items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50"
                  >
                    {isLoading ? "–í—Ö–æ–¥..." : "–í–æ–π—Ç–∏ –ø–æ ID"}
                  </button>
                </form>
              </div>
            </div>
            
            <div className="mt-6 text-sm text-gray-500">
              <p>–ü–æ—Å–ª–µ –≤—Ö–æ–¥–∞ –≤ –±–æ—Ç–∞ –≤—ã —Å–º–æ–∂–µ—Ç–µ:</p>
              <ul className="mt-2 text-left space-y-1">
                <li>‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å –∑–∞–∫–∞–∑—ã</li>
                <li>‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –æ—Ç–∫–ª–∏–∫–∏</li>
                <li>‚Ä¢ –£–ø—Ä–∞–≤–ª—è—Ç—å —Å–¥–µ–ª–∫–∞–º–∏</li>
                <li>‚Ä¢ –û–±—â–∞—Ç—å—Å—è —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è–º–∏</li>
              </ul>
            </div>
          </div>
        </div>
        
        <div className="text-center">
          <Link
            to="/"
            className="text-sm text-indigo-600 hover:text-indigo-500"
          >
            ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
          </Link>
        </div>
      </div>
    </div>
  );
}