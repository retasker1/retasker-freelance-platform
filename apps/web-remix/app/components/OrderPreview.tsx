import React from 'react';

interface OrderPreviewProps {
  formData: {
    title: string;
    description: string;
    budget: string;
    category: string;
    deadline: string;
    isUrgent: boolean;
    workType: string;
    tags: string;
  };
  onEdit: () => void;
  onSubmit: () => void;
  isSubmitting: boolean;
}

export function OrderPreview({ formData, onEdit, onSubmit, isSubmitting }: OrderPreviewProps) {
  const categories = [
    { value: "web", label: "–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞" },
    { value: "mobile", label: "–ú–æ–±–∏–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞" },
    { value: "design", label: "–î–∏–∑–∞–π–Ω" },
    { value: "marketing", label: "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥" },
    { value: "writing", label: "–ö–æ–ø–∏—Ä–∞–π—Ç–∏–Ω–≥" },
    { value: "translation", label: "–ü–µ—Ä–µ–≤–æ–¥—ã" },
    { value: "data", label: "–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö" },
    { value: "ai", label: "–ò–ò –∏ –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ" },
    { value: "blockchain", label: "–ë–ª–æ–∫—á–µ–π–Ω" },
    { value: "other", label: "–î—Ä—É–≥–æ–µ" },
  ];

  const workTypes = [
    { value: "FIXED", label: "–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ü–µ–Ω–∞" },
    { value: "HOURLY", label: "–ü–æ—á–∞—Å–æ–≤–∞—è –æ–ø–ª–∞—Ç–∞" },
    { value: "MILESTONE", label: "–ü–æ —ç—Ç–∞–ø–∞–º" },
  ];

  const getCategoryLabel = (value: string) => 
    categories.find(cat => cat.value === value)?.label || value;
  
  const getWorkTypeLabel = (value: string) => 
    workTypes.find(type => type.value === value)?.label || value;

  const tagList = formData.tags ? formData.tags.split(',').map(tag => tag.trim()).filter(tag => tag.length > 0) : [];

  return (
    <div className="bg-white shadow rounded-lg p-6">
      <div className="mb-6">
        <div className="flex items-center justify-between">
          <h3 className="text-lg font-semibold text-gray-900">
            –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–∫–∞–∑–∞
          </h3>
          {formData.isUrgent && (
            <span className="inline-flex items-center px-3 py-1 text-sm font-semibold rounded-full bg-red-100 text-red-800">
              üî• –°—Ä–æ—á–Ω–æ
            </span>
          )}
        </div>
      </div>

      <div className="space-y-6">
        {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div>
          <h4 className="text-sm font-medium text-gray-900 mb-2">–ù–∞–∑–≤–∞–Ω–∏–µ</h4>
          <p className="text-gray-700 break-words">{formData.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}</p>
        </div>

        <div>
          <h4 className="text-sm font-medium text-gray-900 mb-2">–û–ø–∏—Å–∞–Ω–∏–µ</h4>
          <p className="text-gray-700 whitespace-pre-wrap break-words max-w-full overflow-hidden">{formData.description || '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
        </div>

        {/* –î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞ */}
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <h4 className="text-sm font-medium text-gray-900 mb-2">–ë—é–¥–∂–µ—Ç</h4>
            <p className="text-2xl font-bold text-indigo-600 break-words">${formData.budget || '0'}</p>
          </div>

          <div>
            <h4 className="text-sm font-medium text-gray-900 mb-2">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</h4>
            <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-indigo-100 text-indigo-800 max-w-full truncate">
              {getCategoryLabel(formData.category)}
            </span>
          </div>

          <div>
            <h4 className="text-sm font-medium text-gray-900 mb-2">–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç</h4>
            {formData.isUrgent ? (
              <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
                üî• –°—Ä–æ—á–Ω–æ
              </span>
            ) : (
              <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                –û–±—ã—á–Ω—ã–π
              </span>
            )}
          </div>

          <div>
            <h4 className="text-sm font-medium text-gray-900 mb-2">–¢–∏–ø —Ä–∞–±–æ—Ç—ã</h4>
            <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800 max-w-full truncate">
              {getWorkTypeLabel(formData.workType)}
            </span>
          </div>
        </div>

        {/* –î–µ–¥–ª–∞–π–Ω */}
        {formData.deadline && (
          <div>
            <h4 className="text-sm font-medium text-gray-900 mb-2">–°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è</h4>
            <p className="text-gray-700">
              {new Date(formData.deadline).toLocaleDateString('ru-RU', {
                year: 'numeric',
                month: 'long',
                day: 'numeric'
              })}
            </p>
          </div>
        )}

        {/* –¢–µ–≥–∏ */}
        {tagList.length > 0 && (
          <div>
            <h4 className="text-sm font-medium text-gray-900 mb-2">–¢–µ–≥–∏</h4>
            <div className="flex flex-wrap gap-2">
              {tagList.map((tag, index) => (
                <span
                  key={index}
                  className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800 max-w-full truncate"
                >
                  {tag}
                </span>
              ))}
            </div>
          </div>
        )}
      </div>

      {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
      <div className="flex justify-end space-x-3 mt-8 pt-6 border-t border-gray-200 flex-wrap">
        <button
          onClick={onEdit}
          className="px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 whitespace-nowrap"
        >
          –ù–∞–∑–∞–¥ –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é
        </button>
        <button
          onClick={(e) => {
            e.preventDefault();
            console.log('–ö–Ω–æ–ø–∫–∞ "–°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑" –Ω–∞–∂–∞—Ç–∞');
            onSubmit();
          }}
          disabled={isSubmitting}
          className="px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed whitespace-nowrap"
        >
          {isSubmitting ? "–°–æ–∑–¥–∞–Ω–∏–µ..." : "–°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑"}
        </button>
      </div>
    </div>
  );
}
