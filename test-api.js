// –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Retasker API

const API_BASE = 'http://localhost:3000/api';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP –∑–∞–ø—Ä–æ—Å–æ–≤
async function apiRequest(endpoint, options = {}) {
  const url = `${API_BASE}${endpoint}`;
  const config = {
    headers: {
      'Content-Type': 'application/json',
      ...options.headers
    },
    ...options
  };

  try {
    const response = await fetch(url, config);
    const data = await response.json();
    
    console.log(`\n${options.method || 'GET'} ${endpoint}`);
    console.log(`Status: ${response.status}`);
    console.log('Response:', JSON.stringify(data, null, 2));
    
    return { response, data };
  } catch (error) {
    console.error(`Error in ${options.method || 'GET'} ${endpoint}:`, error);
    return { error };
  }
}

// –¢–µ—Å—Ç–∏—Ä—É–µ–º API
async function testAPI() {
  console.log('üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Retasker API...\n');

  // 1. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  console.log('1Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
  const userData = {
    tgId: '123456789',
    displayName: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
    avatarUrl: 'https://t.me/i/userpic/320/123456789.jpg'
  };
  
  const { data: user } = await apiRequest('/users', {
    method: 'POST',
    body: JSON.stringify(userData)
  });

  if (!user || user.error) {
    console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    return;
  }

  console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω:', user.id);

  // 2. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑
  console.log('\n2Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑...');
  const orderData = {
    title: '–ù—É–∂–µ–Ω –¥–∏–∑–∞–π–Ω –ª–æ–≥–æ—Ç–∏–ø–∞ –¥–ª—è IT –∫–æ–º–ø–∞–Ω–∏–∏',
    description: '–¢—Ä–µ–±—É–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç—å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π, –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π –ª–æ–≥–æ—Ç–∏–ø –¥–ª—è IT —Å—Ç–∞—Ä—Ç–∞–ø–∞. –¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞: —Å–∏–Ω–∏–π –∏ –±–µ–ª—ã–π. –î–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø–æ–º–∏–Ω–∞—é—â–∏–º—Å—è –∏ —Ö–æ—Ä–æ—à–æ —Å–º–æ—Ç—Ä–µ—Ç—å—Å—è –≤ —Ä–∞–∑–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–∞—Ö.',
    budgetCents: 50000 // 500 —Ä—É–±–ª–µ–π
  };

  const { data: order } = await apiRequest('/orders', {
    method: 'POST',
    body: JSON.stringify(orderData)
  });

  if (!order || order.error) {
    console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑');
    return;
  }

  console.log('‚úÖ –ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω:', order.id);

  // 3. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤
  console.log('\n3Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤...');
  await apiRequest('/orders');

  // 4. –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∑–∞–∫–∞–∑
  console.log('\n4Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∑–∞–∫–∞–∑...');
  await apiRequest(`/orders/${order.id}`);

  // 5. –°–æ–∑–¥–∞–µ–º –æ—Ç–∫–ª–∏–∫ –Ω–∞ –∑–∞–∫–∞–∑
  console.log('\n5Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º –æ—Ç–∫–ª–∏–∫ –Ω–∞ –∑–∞–∫–∞–∑...');
  const responseData = {
    priceCents: 45000, // 450 —Ä—É–±–ª–µ–π
    message: '–ì–æ—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ä–∞–±–æ—Ç—É –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ –∏ –≤ —Å—Ä–æ–∫. –£ –º–µ–Ω—è –µ—Å—Ç—å –æ–ø—ã—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ª–æ–≥–æ—Ç–∏–ø–æ–≤ –¥–ª—è IT –∫–æ–º–ø–∞–Ω–∏–π.'
  };

  const { data: response } = await apiRequest(`/orders/${order.id}/responses`, {
    method: 'POST',
    body: JSON.stringify(responseData)
  });

  if (response && !response.error) {
    console.log('‚úÖ –û—Ç–∫–ª–∏–∫ —Å–æ–∑–¥–∞–Ω:', response.id);
  }

  // 6. –ü–æ–ª—É—á–∞–µ–º –æ—Ç–∫–ª–∏–∫–∏ –Ω–∞ –∑–∞–∫–∞–∑
  console.log('\n6Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º –æ—Ç–∫–ª–∏–∫–∏ –Ω–∞ –∑–∞–∫–∞–∑...');
  await apiRequest(`/orders/${order.id}/responses`);

  // 7. –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  console.log('\n7Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
  await apiRequest(`/users/${user.id}`);

  // 8. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –∑–∞–∫–∞–∑–æ–≤
  console.log('\n8Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –∑–∞–∫–∞–∑–æ–≤...');
  await apiRequest('/orders?q=–ª–æ–≥–æ—Ç–∏–ø&minBudget=10000&status=OPEN');

  console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
testAPI().catch(console.error);

